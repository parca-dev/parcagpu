# Multi-stage build for AMD64 libparcagpucupti.so
FROM ubuntu:22.04 AS builder

# Install build tools
RUN apt-get update && apt-get install -y \
    cmake \
    make \
    gcc \
    systemtap-sdt-dev \
    && rm -rf /var/lib/apt/lists/*

# CUDA headers will be mounted from build context
# These are architecture-independent and can be obtained from:
# - Local CUDA installation
# - NVIDIA CUDA Docker container
# - NVIDIA CUDA Toolkit download
ARG CUDA_HEADERS_SRC=cuda_headers
COPY ${CUDA_HEADERS_SRC}/include /usr/local/cuda/include
COPY ${CUDA_HEADERS_SRC}/CUPTI/include /usr/local/cuda/extras/CUPTI/include

# Create stub libraries for linking (since we don't have the actual GPU runtime)
RUN mkdir -p /cuda-stubs/lib64 && \
    echo "int cuInit(unsigned int Flags) { return 0; }" > /tmp/cuda_stub.c && \
    gcc -shared -fPIC /tmp/cuda_stub.c -o /cuda-stubs/lib64/libcuda.so && \
    echo "int cuptiGetVersion(int *version) { return 0; }" > /tmp/cupti_stub.c && \
    gcc -shared -fPIC /tmp/cupti_stub.c -o /cuda-stubs/lib64/libcupti.so && \
    echo "int NV_Init(void) { return 0; }" > /tmp/nvperf_stub.c && \
    gcc -shared -fPIC /tmp/nvperf_stub.c -o /cuda-stubs/lib64/libnvperf_host.so && \
    rm -f /tmp/*stub.c

# Copy source code
WORKDIR /build
COPY cupti/ ./cupti/

# Build the library for AMD64
ENV CUDA_ROOT=/usr/local/cuda
RUN mkdir -p cupti/build && \
    cd cupti/build && \
    cmake -DCUDA_ROOT=${CUDA_ROOT} \
          -DCUDA_STUB_LIBDIR=/cuda-stubs/lib64 .. && \
    make VERBOSE=1

# Extract the built library
FROM scratch AS export
COPY --from=builder /build/cupti/build/libparcagpucupti.so /
